name: web
on:
  push:
    branches: [ "master","dev" ]
    tags: [ 'v*','V*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_SUBNAME: web
  WORKING_DIR: vue_campus_admin

jobs:
  node:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache ‚òï
        id: cache
        uses: actions/cache@v3
        with:
          path: vue_campus_admin/node_modules
          key: ${{runner.os}}-npm-caches-${{ hashfiles('package-lock.json') }}

      - name: Install üîß
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Build üîß
        run: |
          npm run build:prod
          cp -r ../doc doc
          cd dist
          cp index.html 404.html

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.IMAGE_SUBNAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.WORKING_DIR }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}